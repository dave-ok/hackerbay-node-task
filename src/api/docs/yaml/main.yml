paths: 
  # Login Endpoint
  /login:
    post:
      summary: Login endpoint to get JWT authentication token
      requestBody:
        description: A JSON object containing random/abritary login information
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
            example:
              username: arbritrary_username
              password: random_password
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - data
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      token:
                        type: string
        "400":
          description: Bad request Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - error
                properties:
                  status:
                    type: string
                  error:
                    type: string
                  errors:
                    type: array
                    items:
                      type: string
  # JSON Patch Endpoint
  /utils/json-patch:
    post:
      summary: An endpoint for JSON patch utility
      security:
        - Bearer: []
      requestBody:
        description: A JSON object containing a JSON object and a JSON patch operator array
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jsonObject:
                  type: object
                  example:
                    biscuits:
                      - name: Digestive
                      - name: Chocolate
                jsonPatch:
                  type: array
                  items:
                    type: object
                  example:
                    - op: remove
                      path: /biscuits/0

      responses:
        "200":
          description: JSON patch successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - data
                properties:
                  status:
                    type: string
                    example:
                      success
                  data:
                    type: object
                    properties:
                      document:
                        type: object
                        example:
                          biscuits:
                            - name: Chocolate
        "400":
          description: Bad request Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - error
                properties:
                  status:
                    type: string
                  error:
                    type: string
                  errors:
                    type: array
                    items:
                      type: string
  # Thumbnail Creation Endpoint
  /utils/create-thumbnail:
    post:
      summary: An endpoint for creating a thumbnail from an image URL
      security:
        - Bearer: []
      parameters:
        - in: query
          name: raw
          schema:
            type: boolean
            default: false
          description: optional parameter to return raw image thumbnail (true) or JSON with base64 encoded image (false)
          required: false
      requestBody:
        description: A valid URL pointing to an image with an optional query parameter that determines the response format
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                imageUrl:
                  type: string
                  format: uri
                  example:
                    "https://images.freeimages.com/images/large-previews/173/electronics-1242938.jpg"
      responses:
        "200":
          description: Thumbnail created successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - data
                properties:
                  status:
                    type: string
                    example:
                      success
                  data:
                    type: object
                    properties:
                      base64Thumbnail:
                        type: string
                        format: byte
                  message:
                    type: string
                    example: Thumbnail created!
        "400":
          description: Bad request Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - error
                properties:
                  status:
                    type: string
                  error:
                    type: string
                  errors:
                    type: array
                    items:
                      type: string
 